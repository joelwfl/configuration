define(["underscore"],function(a){return function(c,f){function h(d){var a={};a[c]=JSON.stringify(d);storage.set(a,function(){console.log("stored items",d,a)});"function"==typeof messagePopup&&messagePopup({action:"collectionUpdated",collection:JSON.stringify(d),type:c});console.log("%c ALL DONE","background: chartreuse;");"undefined"!==typeof f&&f.resolve()}var m;return{reset:!0,beforeSend:function(a){m=a},error:function(a,g,h){0==g.status&&!1==navigator.onLine&&(console.log("uh oh, you are offline! Let's try to fall back to cached state"),
storage.get(c,function(b){b=b[c]||null;b=JSON.parse(b);console.log("got from cache:",b);h.success(b,200,a)}.bind(this)));401==status&&Auth.logOut();"undefined"!==typeof f&&f.reject()},success:function(d,g){if(!1==navigator.onLine)console.log("syncing when offline... hardcore",d),h(d);else{var f="tasks"==c?"task":"category";storage.get(null,function(b){console.log("items",b);var o=b[c+"LastSync"]||0,e={},j=m.getResponseHeader("Date");if(j)if(e[c+"LastSync"]=+new Date(j),console.log(c,"collection fetch success at date",
e),storage.set(e),"undefined"!==typeof app)h(d);else{g=a.filter(g,function(a){return a.lastUpdateDate>o});var k=[];for(itemKey in b)b.hasOwnProperty(itemKey)&&(0===itemKey.indexOf(f+"-")?(b[itemKey]=JSON.parse(b[itemKey]),k.push(itemKey)):delete b[itemKey]);if(0<a.size(b)){var e=a.pluck(a.values(b),"id"),j=a.pluck(g,"id"),l=a.difference(e,j),e=a.intersection(e,j);console.log("itemsToPush are",l);console.log("itemsToDiscard are",e);_gaq.push(["_trackEvent","Task Window","Offline","Tasks changed while offline",
l.length]);e=a.map(e,function(a){return f+"-"+a});storage.remove(e);var n=[];a.each(l,function(e,d){var f=new $.Deferred;n.push(f.promise());var i=b[k[d]];if("tasks"==c&&i.parentGlobalTaskId){var h=i.parentGlobalTaskId;if(a.contains(l,h)&&b["task-"+h].neverSynced){console.log("Parent task never synced, wait for next round please!");f.reject();return}}var i=a.omit(i,"lastUpdateDate"),g;i.neverSynced?window[c].create(i,{beforeSend:function(a){g=a},success:function(){storage.remove(k[d]);var a={};a[c+
"LastSync"]=+new Date(g.getResponseHeader("Date"));storage.set(a);f.resolve()}}):window[c]._byId[e].save(i,{beforeSend:function(a){g=a},success:function(){storage.remove(k[d]);var a={};a[c+"LastSync"]=+new Date(g.getResponseHeader("Date"));storage.set(a);f.resolve()}})});$.when.apply($,n).always(function(){h(d)})}else console.info("no dirty tasks found"),h(d)}})}}}}});