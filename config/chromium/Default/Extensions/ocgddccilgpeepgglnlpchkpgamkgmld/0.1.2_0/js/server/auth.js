define(["jquery","underscore","constants","helpers","base64"],function(e,d,i,h,f){return{createUser:function(a,b,c,g,d,f){e.ajax({url:USER_URL,type:"post",dataType:"json",contentType:"application/json",xhrFields:{withCredentials:!0},crossDomain:!0,data:JSON.stringify({name:a,username:b,password:c,emails:[g],phoneNumbers:[]}),success:d,error:f})},remindMe:function(a,b,c){e.ajax({url:FORGOT_URL,type:"post",xhrFields:{withCredentials:!0},crossDomain:!0,data:{email:a},success:b,error:c})},logIn:function(a,
b,c,g){e.ajax({url:LOGIN_URL,type:"post",xhrFields:{withCredentials:!0},crossDomain:!0,data:{j_username:a,j_password:b,_spring_security_remember_me:"on"},success:c,error:function(a){0==a.status?c(a):g(a)}})},getFacebookAccessToken:function(a){storage.get("access_token",function(b){a(b.access_token)})},saveFacebookAccessToken:function(a,b){storage.set({username:a,access_token:a},function(){this.logInWithFacebook(a,b,function(){console.log("error logging in with facebook")})}.bind(this))},logInWithFacebook:function(a,
b,c){console.log("logging in with facebook...");e.ajax({url:FACEBOOK_URL,type:"post",xhrFields:{withCredentials:!0},crossDomain:!0,data:{access_token:a,_spring_security_remember_me:"on"},success:d.bind(function(a){b(a)},this),error:d.bind(function(a){0==a.status?b(a):c(a)},this)})},logOut:function(){console.log("logging out...");!1==navigator.onLine?(window.storage.clear(function(){storage.set({forceLogout:!0})}),initializePage()):e.ajax({url:LOGOUT_URL,type:"post",xhrFields:{withCredentials:!0},
crossDomain:!0,success:d.bind(function(){storage.remove("forceLogout")},this),complete:d.bind(function(){h.getStorageItemsByKeyStart(["view_","calendar_day"],function(a){storage.clear();storage.set(a,function(){initializePage()})})},this)})},logInUsingStoredCredentials:function(a,b){storage.get(["access_token","username","password"],function(c){c.access_token?this.logInWithFacebook(c.access_token,a,b):c.username?this.logIn(c.username,f.decodeBase64(c.password),a,b):b()}.bind(this))},isCredentialsSaved:function(a,
b){storage.get("username",function(c){c&&null!=c.username?a&&a():storage.get("access_token",function(c){c&&null!=c.access_token?a&&a():b&&b()})})},saveCredentials:function(a,b){storage.set({username:a,password:f.encodeBase64(b)})},isLoggedIn:function(a,b){e.ajax({url:FACEBOOK_URL,type:"get",xhrFields:{withCredentials:!0},crossDomain:!0,success:d.bind(function(){a()},this),error:d.bind(function(){b()},this)})},tryLogIn:function(a,b){storage.get("forceLogout",function(c){c.forceLogout&&navigator.onLine?
this.logOut():e.ajax({url:ME_URL,type:"get",xhrFields:{withCredentials:!0},crossDomain:!0,success:d.bind(function(){console.log("got success when trying to get /me");a()},this),error:d.bind(function(){console.log("Error handler reached!");this.isCredentialsSaved(function(){console.log("true");console.log("trying to do an automatic log-in ");this.logInUsingStoredCredentials(function(){a()},d.bind(function(){this.logOut()},this))}.bind(this),function(){console.log("Not logged in callback!");b()}.bind(this))},
this)})}.bind(this))},getUserName:function(a){storage.get("username",function(b){b&&a(b.username)})},facebookConnect:function(a,b){this.getFacebookAccessToken(function(c){console.log("token is:",c);c?(console.log("yes, token!"),this.logInWithFacebook(c,a,b)):"undefined"!=typeof chrome&&this.facebookConnectChrome(a,b)}.bind(this))},facebookConnectChrome:function(a){chrome.identity.launchWebAuthFlow({url:FACEBOOK_OAUTH_URL,interactive:!0},function(b){b=b.split("token=")[1];console.log("token is",b);
this.saveFacebookAccessToken(b,a)}.bind(this))}}});